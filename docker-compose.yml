version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: crewui_postgres
    environment:
      POSTGRES_DB: crewui
      POSTGRES_USER: crewui
      POSTGRES_PASSWORD: crewui_dev
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - crewui_network

  # Redis for Celery
  redis:
    image: redis:7-alpine
    container_name: crewui_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - crewui_network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: crewui_backend
    environment:
      - DATABASE_URL=postgresql://crewui:crewui_dev@postgres:5432/crewui
      - REDIS_URL=redis://redis:6379
      - ENVIRONMENT=development
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - ./uploads:/app/uploads
    depends_on:
      - postgres
      - redis
    networks:
      - crewui_network
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: crewui_frontend
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - crewui_network
    command: npm run dev

  # Celery Worker
  celery:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: crewui_celery
    environment:
      - DATABASE_URL=postgresql://crewui:crewui_dev@postgres:5432/crewui
      - REDIS_URL=redis://redis:6379
      - ENVIRONMENT=development
    volumes:
      - ./backend:/app
      - ./uploads:/app/uploads
    depends_on:
      - postgres
      - redis
    networks:
      - crewui_network
    command: celery -A app.celery worker --loglevel=info

volumes:
  postgres_data:
  redis_data:

networks:
  crewui_network:
    driver: bridge 